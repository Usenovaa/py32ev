"""
Логические выражения и операторы Python.
BooleanType. NoneType. Условные операторы.
Тернарные и маржовые операторы  
"""

"""====== BooleanType ======="""
# bool -> неизменяемый тип данных. Есть только два значения True/False

# print(bool(0)) #False
# print(bool(1)) #True
# print(bool(-1)) #True
# print(bool(256)) #True

# print(bool('hello')) #True
# bool('') #False
# bool(True) #True
# bool('False') #True
# bool(False) #False
# bool(' ') #True


"""======= NoneType ========"""
# неизменяемый тип данных. есть только одно значение None
# Используется для обозначения пустых значений (значение отсутствует)
bool(None)  # False
bool("None")  # True

"""
Логические выражения -> возвращают либо True, либо False
4 == 2 False
"""

"""
Логические операторы
"""
# == -> оператор сравнения
5 == 5  # True
6 == 7  # False
"5" == 5  # False

#  != -> не равно
5 != 5  # False
8 != 1  # True

# > - больше
4 > 6  # False
8 > 5  # True
5 > 5  # False

# < - меньше
3 < 9  # True
10 < 9  # False
9 < 9  # False

# >= -> больше или равно
5 >= 4  # True
5 >= 7  # False
5 >= 5  # True

# <= - меньше или равно
5 <= 10  # True
5 <= 3  # False
3 <= 3  # True


""" ========= and or not ======== """
# 1. and -> логическое и
# 2. or -> логическое или
# 3. not -> логическое отрицание

# and         используются для объединения
# or             логических выражений

num1 = 5
num2 = 6

num1 == 5 and num2 == 6  # True (певая часть выражения True, вторая True) (Обе части выражения должны возвращать True)
num1 == 4 and num2 == 6  # False (первая часть False, вторая True)
num1 == 8 and num2 == 0  # False (обе части False)
"""
если все части выражения True -> True
если хотя бы одна часть False -> False
"""


num1 == 5 or num2 == 6  # True (певая часть выражения True, вторая True) (Обе части выражения должны возвращать True)
num1 == 4 or num2 == 6  # True (первая часть False, вторая True)
num1 == 8 or num2 == 0  # False (обе части False)
# хотя бы одна часть выражения должна быть True -> True

num1 = 5 
num2 = 6
# not
# not True -> False
# not False -> True

not num1 == 6 # True
not num2 == 6 # False

not num1 != 5 # True


'''
======= Операторы идентификации ========
'''
# 1. in -> проверяем наличие элемента в последовательности
# 2. сравнение
    # == -> сравнение по значению
    # is -> сравнение по ячейке памяти

# '1' in '1234567890'

# str1 = 'hello'
# str2 = str1.lower()
# print(str1, str2)
# print(str1 == str2) # True
# print(id(str1), id(str2))
# print(str1 is str2) # False
# print('hello' is 'hello')



'''
============ Условные операторы =============
'''
# нужны для того, чтобы код при разных входных данных работал по разному

# if, elif, else

# 1. Вариант
# if условие1: 
#     тело1
    # тело1 будет выполняться, если услови1 верно (True)

# age = int(input('Введите возраст: '))
# if age > 18:
#     print('Можете пройти')

# 2. Вариант
# if условие1: 
#     тело1
#     тело1 будет выполняться, если услови1 верно (True)
# else:
#     тело2
    # тело2 будет выполняться, если услови1 не верно (True) (во всех остальных случаях)

# age = int(input('Введите возраст: '))
# if age > 18:
#     print('Можете пройти')
# else:
#     print('Вам пора спать')

# 3. Вариант
# if условие1: 
#     тело1
#     тело1 будет выполняться, если услови1 верно (True)
# elif условие2:
#     тело2
    # тело2 будет выполняться, если услови1 не верно (True) , а условие2 верно 

# age = int(input('Введите возраст: '))

# if age > 50:
#     print('Вам поздно')
# elif age >= 18:
#     print('Можете пройти')
# elif age < 18:
#     print('Вам пора спать')


# 4. Вариант
# if условие1: 
#     тело1
#     тело1 будет выполняться, если услови1 верно (True)
# elif условие2:
#     тело2
    # тело2 будет выполняться, если услови1 не верно (True) , а условие2 верно 
# else:
    # тело3
    # тело3 будет выполняться, если услови1 и условие2 не верны (True) 

# age = int(input('Введите возраст: '))

# if age >= 18 and age < 50:
#     print('Можете пройти')
# elif age < 18:
#     print('Вам пора спать')
# else:
#     print('??????????????????')


'''
============ Тернарные операторы =============
'''
# условие в одну строку

# if ...:
#     ...
# else:
#     ...

'''Синтаксис'''
# результат1 if условие else результат2
# a = int(input('Введите число от 1 до 5: '))
# result = 'hello' if a == 5 else 'Bye'
# print(result)

'''
=========== Маржовый оператор ==============
'''
# := -> позваляет присвоить значение переменной и вернуть его
# print(num1 = 2) # = только присваивает, но не возвращает (ошибка)
# print(num2 := 4)
